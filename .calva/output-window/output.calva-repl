; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.26.0"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉calc-api.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉calc-api.core꞉> 
(in-ns 'calc-api.server.server)
#namespace[calc-api.server.server]
clj꞉calc-api.server.server꞉> 
(start)
; Syntax error compiling at (.calva/output-window/output.calva-repl:24:1).
; Unable to resolve symbol: start in this context
clj꞉calc-api.server.server꞉> 
(start-server)
; Syntax error compiling at (.calva/output-window/output.calva-repl:28:1).
; Unable to resolve symbol: start-server in this context
clj꞉calc-api.server.server꞉> (all-ns)
; Syntax error compiling at (.calva/output-window/output.calva-repl:31:30).
; Unable to resolve symbol: all-ns in this context
clj꞉calc-api.server.server꞉> 
(in-ns 'calc-api.core)
#namespace[calc-api.core]
clj꞉calc-api.core꞉> 
(all-ns)
(#namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.cljs.analysis]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.util.os]
 #namespace[nrepl.middleware.interruptible-eval]
 #namespace[cider.nrepl.pprint]
 #namespace[cider.nrepl.middleware.track-state]
 #namespace[clojure.stacktrace]
 #namespace[cider.nrepl.middleware.util.nrepl]
 #namespace[clojure.test]
 #namespace[cider.nrepl.inlined-deps.toolsreader.v1v3v2.clojure.tools.reader]
 #namespace[cider.nrepl.middleware.content-type]
 #namespace[cider.nrepl.middleware.debug]
 #namespace[clojure.core.server]
 #namespace[clojure.core.specs.alpha]
 #namespace[cider.nrepl.inlined-deps.dynapath.v1v1v0.dynapath.defaults]
 #namespace[nrepl.server]
 #namespace[nrepl.middleware.session]
 #namespace[cider.nrepl.middleware.util.coerce]
 #namespace[clojure.reflect]
 #namespace[cider.nrepl.middleware.inspect]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.java.resource]
 #namespace[cider.nrepl.inlined-deps.javaclasspath.v1v0v0.clojure.java.classpath]
 #namespace[cider.nrepl.middleware.util.error-handling]
 #namespace[nrepl.middleware.caught]
 #namespace[cider.nrepl.inlined-deps.toolsreader.v1v3v2.clojure.tools.reader.default-data-readers]
 #namespace[cider.nrepl.inlined-deps.dynapath.v1v1v0.dynapath.dynamic-classpath]
 #namespace[clojure.spec.alpha]
 #namespace[nrepl.util.completion]
 #namespace[cider.nrepl.inlined-deps.toolsnamespace.v1v0v0.clojure.tools.namespace.dependency]
 #namespace[cider.nrepl.middleware.ns]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.eldoc]
 #namespace[clojure.set]
 #namespace[cider.nrepl.middleware.complete]
 #namespace[cider.nrepl.middleware.stacktrace]
 #namespace[cider.nrepl.inlined-deps.compliment.v0v3v11.compliment.sources]
 #namespace[nrepl.ack]
 #namespace[cider.nrepl.inlined-deps.suitable.v0v4v0.suitable.js-completions]
 #namespace[clojure.string]
 #namespace[clojure.java.browse]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.misc]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.java]
 #namespace[clojure.java.javadoc]
 #namespace[cider.nrepl.inlined-deps.toolsreader.v1v3v2.clojure.tools.reader.impl.inspect]
 #namespace[cider.nrepl.inlined-deps.compliment.v0v3v11.compliment.sources.keywords]
 #namespace[clojure.repl]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.clojuredocs]
 #namespace[cider.nrepl.inlined-deps.suitable.v0v4v0.suitable.ast]
 #namespace[cider.nrepl.inlined-deps.compliment.v0v3v11.compliment.sources.namespaces-and-classes]
 #namespace[cider.nrepl.inlined-deps.orchard.v0v7v1.orchard.query]
 #namespace[cider.nrepl.inlined-deps.suitable.v0v4v0.suitable.complete-for-nrepl]
 #namespace[cider.nrepl.inlined-deps.dynapath.v1v1v0.dynapath.util]
 ...)
clj꞉calc-api.core꞉> 
